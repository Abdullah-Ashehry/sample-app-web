/* eslint-disable no-unused-expressions */
/* eslint-disable quotes */
/* eslint-disable prefer-arrow-callback */
/* eslint-disable func-names */
/* eslint-disable no-var */
/* global $ */


$(document).ready(() => {
  var langsVersion = [{
    value: '1.8.5',
    text: 'latest',
  }].reverse();

  var getLangDiv = function getLangDiv() {
    var langs = [{
      value: 'en',
      text: 'English',
    }, {
      value: 'cn',
      text: '中文',
    }];
    var options = langs.map(function (item) {
      return "<option value=\"".concat(item.value, "\">").concat(item.text, "</option>");
    });
    return "<select id=\"sdk-lang\" class=\"sdk-option\" disabled>".concat(options.join(), "</select>");
  };

  var getVersionDiv = function getVersionDiv() {
    // eslint-disable-next-line no-var
    var options = langsVersion.map(function (item) {
      return "<option value=\"".concat(item.value, "\">").concat(item.text, "</option>");
    });
    return "<select id=\"sdk-version\" class=\"sdk-option\">".concat(options.join(), "</select>");
  };

  var getPathname = function getPathname() {
    var reg = /(\w+)\/(\d+.\d+.\d+)\/(.*)/;
    var result = [];
    var tmpPathname = reg.exec(window.location.pathname);
    tmpPathname && tmpPathname[1] ? result.push(tmpPathname[1]) : result.push('en');
    tmpPathname && tmpPathname[2] ? result.push(tmpPathname[2]) : result.push('1.8.5');
    tmpPathname && tmpPathname[3] ? result.push(tmpPathname[3]) : result.push('');
    return result;
  };

  var changeAPIPage = function changeAPIPage(pathname) {
    var lang = $('#sdk-lang').val();
    var version = $('#sdk-version').val();
    var oldLang = pathname[0];
    var oldVersion = pathname[1];
    var path = pathname[2];
    var href = "/sample-app-web/".concat(lang, "/").concat(version, "/").concat(path);
    if (oldLang !== lang || oldVersion !== version) {
      var isLatest = false;
      langsVersion.forEach(function (item) {
        if (item.value === version && item.text === 'latest') {
          isLatest = true;
        }
      });
      if (isLatest) {
        window.location.href = "/sample-app-web/";
      } else {
        window.location.href = href;
      }
    }
  };

  function zoomDocInit() {
    var getNavSelectionDiv = function getNavSelectionDiv() {
      return "<div id=\"nav-option\">".concat(getLangDiv()).concat(getVersionDiv(), "</div>");
    };

    var tmpDiv = getNavSelectionDiv();
    setTimeout(function () {
      var tmp = $('#syno-nsc-ext-gen3 > nav > h2');
      tmp.append(tmpDiv);
      setTimeout(function () {
        var pathname = getPathname(); // $('#sdk-lang').val(pathname[0]);
        // $('#sdk-lang').change(() => {
        //   changeAPIPage(pathname);
        // });

        $('#sdk-version').val(pathname[1]);
        $('#sdk-version').change(function () {
          changeAPIPage(pathname);
        });
      }, 2000);
    }, 2000);
    console.log('Zoom WebSDK doc ready!');
  }

  if (typeof window !== 'undefined') {
    window.zoomDocInit = zoomDocInit;
  }
});
